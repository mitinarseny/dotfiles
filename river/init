#!/bin/sh

mod="Mod4" # Super

. ${XDG_CONFIG_HOME}/wob/conf.sh
. ${XDG_CONFIG_HOME}/nord/colors.sh

riverctl map normal $mod+Shift Return spawn alacritty

riverctl float-filter-add app-id float
if command -v foot > /dev/null; then
  riverctl map normal $mod Space spawn 'footclient \
    --app-id=float \
    --title=Spotlight \
    --window-size-chars=60x12 \
    fzf_run'
else
  riverctl map normal $mod Space spawn 'alacritty --class=float --title=Spotlight fzf_run'
fi

riverctl map normal $mod               Q close
riverctl map normal $mod+Control+Shift Q exit

riverctl map normal $mod L spawn waylock

riverctl map normal $mod       Tab focus-view next
riverctl map normal $mod+Shift Tab focus-view previous

riverctl map normal $mod       grave focus-previous-tags
riverctl map normal $mod+Shift grave send-to-previous-tags

riverctl map normal $mod+Shift Period swap next
riverctl map normal $mod+Shift Comma  swap previous

riverctl map normal $mod BracketRight focus-output next
riverctl map normal $mod BracketLeft  focus-output previous

riverctl map normal $mod+Shift BracketRight send-to-output next
riverctl map normal $mod+Shift BracketLeft  send-to-output previous

riverctl map normal $mod Return zoom

riverctl map normal $mod Equal mod-layout-value rivertile fixed main_factor +0.05
riverctl map normal $mod Minus mod-layout-value rivertile fixed main_factor -0.05

riverctl map normal $mod+Shift Equal mod-layout-value rivertile int main_count +1
riverctl map normal $mod+Shift Minus mod-layout-value rivertile int main_count -1

riverctl map normal $mod+Mod1 Left  move left  100
riverctl map normal $mod+Mod1 Down  move down  100
riverctl map normal $mod+Mod1 Up    move up    100
riverctl map normal $mod+Mod1 Right move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Control Left  snap left
riverctl map normal $mod+Mod1+Control Down  snap down
riverctl map normal $mod+Mod1+Control Up    snap up
riverctl map normal $mod+Mod1+Control Right snap right

riverctl map normal $mod+Mod1+Shift Left  resize horizontal -100
riverctl map normal $mod+Mod1+Shift Down  resize vertical    100
riverctl map normal $mod+Mod1+Shift Up    resize vertical   -100
riverctl map normal $mod+Mod1+Shift Right resize horizontal  100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

riverctl map normal $mod       F toggle-fullscreen
riverctl map normal $mod+Shift F toggle-float

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod+Control Up    set-layout-value rivertile string main_location top
riverctl map normal $mod+Control Right set-layout-value rivertile string main_location right
riverctl map normal $mod+Control Down  set-layout-value rivertile string main_location bottom
riverctl map normal $mod+Control Left  set-layout-value rivertile string main_location left

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive
    riverctl map $mode None XF86Eject spawn eject -T

    # ALSA
    riverctl map $mode None XF86AudioRaiseVolume  spawn "sh -c \" \
      amixer sset Master 5%+ unmute | \
      sed -En 's/.*\[([0-9]+)%\].*/\1 #${NORD0}ff #${NORD3}ff #${NORD6}ff/p' | \
      head -1 > ${WOBSOCK}\""
    riverctl map $mode None XF86AudioLowerVolume  spawn "sh -c \" \
      amixer sset Master 5%- unmute | \
      sed -En 's/.*\[([0-9]+)%\].*/\1 #${NORD0}ff #${NORD3}ff #${NORD6}ff/p' | \
      head -1 > ${WOBSOCK}\""
    riverctl map $mode None XF86AudioMute         spawn "sh -c \" \
      amixer sset Master toggle | \
        sed -En -e '/\[on\]/ s/.*\[([0-9]+)%\].*/\1 #${NORD0}ff #${NORD3}ff #${NORD6}ff/p' \
                -e '/\[off\]/ s/.*\[([0-9]+)%\].*/0 #${NORD0}ff #${NORD11}ff #${NORD6}ff/p' | \
        head -1 > ${WOBSOCK}\""

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    # riverctl map $mode None XF86AudioMedia spawn playerctl play-pause
    # riverctl map $mode None XF86AudioPlay  spawn playerctl play-pause
    # riverctl map $mode None XF86AudioPrev  spawn playerctl previous
    # riverctl map $mode None XF86AudioNext  spawn playerctl next

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn "sh -c \" \
      light -A 5 && light -G | \
      sed -En 's/([0-9]+)\.[0-9]{2}/\1 #${NORD0}ff #${NORD3}ff #${NORD6}ff/p' > ${WOBSOCK}\""
    riverctl map $mode None XF86MonBrightnessDown spawn "sh -c \" \
      light -U 5 && light -G | \
      sed -En 's/([0-9]+)\.[0-9]{2}/\1 #${NORD0}ff #${NORD3}ff #${NORD6}ff/p' > ${WOBSOCK}\""
done

# Set repeat rate
riverctl set-repeat 50 300

riverctl map normal None Print spawn "sh -c \"grim ${HOME}/screenshots/screenshot_\$(date +'%Y-%m-%d_%H-%M-%S.png')\""
riverctl map normal Control Print spawn "sh -c 'grim - | wl-copy'"
riverctl map normal $mod Print spawn "sh -c \"slurp -b '#${NORD6}44' -c '#${NORD3}FF' | grim -g - ${HOME}/screenshots/screenshot_\$(date +'%Y-%m-%d_%H-%M-%S.png')\""
riverctl map normal $mod+Control Print spawn "sh -c \"slurp -b '#${NORD6}44' -c '#${NORD3}FF' | grim -g - - | wl-copy\""

# Set opacity and fade effect
# riverctl opacity 1.0 0.75 0.0 0.1 20

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile

riverctl attach-mode bottom
riverctl border-width 2
riverctl background-color       "0x${NORD0}"
riverctl border-color-focused   "0x${NORD3}"
riverctl border-color-unfocused "0x${NORD1}"

LOCALRC=${XDG_CONFIG_HOME}/river/local
if [ -r ${LOCALRC} ]; then
  . ${LOCALRC}
fi

# runsvdir on SIGHUP sends SIGTERM to all of running services,
# so remap signal
runsvdir "${SVDIR}" &
trap "kill -1 -- $!" 15
wait

